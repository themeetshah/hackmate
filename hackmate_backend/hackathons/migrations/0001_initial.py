# Generated by Django 5.2.5 on 2025-08-14 17:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hackathon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('short_description', models.CharField(max_length=500)),
                ('banner_image', models.ImageField(blank=True, upload_to='hackathons/banners/')),
                ('categories', models.JSONField(default=list, help_text="e.g., ['AI/ML', 'Web Dev', 'Mobile Apps']")),
                ('tech_stack', models.JSONField(default=list, help_text="e.g., ['React', 'Python', 'TensorFlow']")),
                ('themes', models.JSONField(default=list, help_text="e.g., ['Healthcare', 'Education', 'Environment']")),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('registration_start', models.DateTimeField()),
                ('registration_end', models.DateTimeField()),
                ('registration_type', models.CharField(choices=[('individual', 'Individual Only'), ('team', 'Team Only'), ('both', 'Individual & Team')], default='both', max_length=20)),
                ('max_participants', models.IntegerField()),
                ('min_team_size', models.IntegerField(default=1)),
                ('max_team_size', models.IntegerField(default=4)),
                ('current_participants', models.IntegerField(default=0)),
                ('confirmed_participants', models.IntegerField(default=0)),
                ('mode', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('hybrid', 'Hybrid')], default='online', max_length=20)),
                ('venue', models.TextField(blank=True, help_text='For offline/hybrid events')),
                ('meeting_link', models.URLField(blank=True, help_text='For online events')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('prizes', models.JSONField(default=dict, help_text="{'first': '₹50,000', 'second': '₹30,000'}")),
                ('total_prize_pool', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('registration_open', 'Registration Open'), ('registration_closed', 'Registration Closed'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_free', models.BooleanField(default=True)),
                ('registration_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('winners_declared', models.BooleanField(default=False)),
                ('results_announcement', models.TextField(blank=True)),
                ('total_views', models.IntegerField(default=0)),
                ('total_registrations', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_hackathons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HackathonApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_type', models.CharField(choices=[('individual', 'Individual'), ('team_leader', 'Team Leader')], default='individual', max_length=20)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('payment_pending', 'Payment Pending'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='applied', max_length=20)),
                ('skills_bringing', models.JSONField(default=list, help_text='Specific skills for this hackathon')),
                ('looking_for_team', models.BooleanField(default=False, help_text='Are you looking to join a team?')),
                ('preferred_team_size', models.IntegerField(blank=True, help_text='Preferred team size', null=True)),
                ('preferred_roles', models.JSONField(default=list, help_text='Roles you want in your team')),
                ('open_to_remote_collaboration', models.BooleanField(default=True)),
                ('project_ideas', models.TextField(blank=True, help_text='Any initial project ideas you have')),
                ('payment_status', models.CharField(choices=[('not_required', 'Not Required'), ('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='not_required', max_length=20)),
                ('payment_id', models.CharField(blank=True, max_length=100)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('payment_deadline', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.CharField(blank=True, choices=[('max_participants_reached', 'Maximum participants reached'), ('payment_not_completed', 'Payment not completed within deadline'), ('incomplete_profile', 'Incomplete user profile'), ('skill_mismatch', 'Skills do not match hackathon requirements'), ('duplicate_application', 'Duplicate application detected'), ('organizer_decision', 'Organizer decision'), ('other', 'Other reason')], help_text='Reason for rejection', max_length=50)),
                ('rejection_details', models.TextField(blank=True, help_text='Additional rejection details')),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='hackathons.hackathon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hackathon_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-applied_at'],
            },
        ),
        migrations.AddIndex(
            model_name='hackathon',
            index=models.Index(fields=['status', '-created_at'], name='hackathons__status_4fd656_idx'),
        ),
        migrations.AddIndex(
            model_name='hackathon',
            index=models.Index(fields=['organizer', '-created_at'], name='hackathons__organiz_f41c4b_idx'),
        ),
        migrations.AddIndex(
            model_name='hackathonapplication',
            index=models.Index(fields=['hackathon', 'status'], name='hackathons__hackath_76114d_idx'),
        ),
        migrations.AddIndex(
            model_name='hackathonapplication',
            index=models.Index(fields=['user', '-applied_at'], name='hackathons__user_id_40e0a3_idx'),
        ),
        migrations.AddIndex(
            model_name='hackathonapplication',
            index=models.Index(fields=['status', 'payment_status'], name='hackathons__status_db0ba7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='hackathonapplication',
            unique_together={('user', 'hackathon')},
        ),
    ]
